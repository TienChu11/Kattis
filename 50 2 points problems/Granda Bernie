import java.io.*;
import java.math.BigInteger;
import java.util.StringTokenizer;
import java.util.*;
import java.lang.*;
import java.util.stream.IntStream;
import static java.lang.Math.*;

public class Main extends PrintWriter{
    public Main(InputStream i) {
        super(new BufferedOutputStream(System.out));
        r = new BufferedReader(new InputStreamReader(i));
    }
    public Main(InputStream i, OutputStream o) {
        super(new BufferedOutputStream(o));
        r = new BufferedReader(new InputStreamReader(i));
    }

    public boolean hasMoreTokens() {
        return peekToken() != null;
    }

    public int getInt() {
        return Integer.parseInt(nextToken());
    }

    public double getDouble() {
        return Double.parseDouble(nextToken());
    }

    public long getLong() {
        return Long.parseLong(nextToken());
    }

    public String getWord() {
        return nextToken();
    }



    private BufferedReader r;
    private String line;
    private StringTokenizer st;
    private String token;

    private String peekToken() {
        if (token == null)
            try {
                while (st == null || !st.hasMoreTokens()) {
                    line = r.readLine();
                    if (line == null) return null;
                    st = new StringTokenizer(line);
                }
                token = st.nextToken();
            } catch (IOException e) { }
        return token;
    }

    private String nextToken() {
        String ans = peekToken();
        token = null;
        return ans;
    }

    public static void main(String[] args) {

        Main sc = null;
        try{
            sc = new Main(System.in, System.out);
        }catch (Exception e){ System.out.println(e); }

        int trips = sc.getInt();
        Map<String, ArrayList<Integer>> map = new HashMap<>();
        for (int i = 0; i < trips; i++) {
            String country = sc.getWord();
            int year = sc.getInt();

            if(!map.containsKey(country)) map.put(country, new ArrayList<Integer>());
            map.get(country).add(year);
        }

        for (Map.Entry<String, ArrayList<Integer>> entry : map.entrySet()){
            Collections.sort(entry.getValue());
        }

        // queries
        int q = sc.getInt();
        for (int i = 0; i < q; i++) {
            String countryName = sc.getWord();
            int index = sc.getInt();

            ArrayList<Integer> theArray = map.get(countryName);
            int year = theArray.get(index - 1);
            sc.println(year);
        }

        sc.flush();


    }
}
