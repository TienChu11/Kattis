import java.io.*;
import java.util.StringTokenizer;
import java.util.*;
import java.lang.*;

class Main extends PrintWriter {
    public Main(InputStream i) {
        super(new BufferedOutputStream(System.out));
        r = new BufferedReader(new InputStreamReader(i));
    }
    public Main(InputStream i, OutputStream o) {
        super(new BufferedOutputStream(o));
        r = new BufferedReader(new InputStreamReader(i));
    }

    public boolean hasMoreTokens() {
        return peekToken() != null;
    }

    public int getInt() {
        return Integer.parseInt(nextToken());
    }

    public double getDouble() {
        return Double.parseDouble(nextToken());
    }

    public long getLong() {
        return Long.parseLong(nextToken());
    }

    public String getWord() {
        return nextToken();
    }



    private BufferedReader r;
    private String line;
    private StringTokenizer st;
    private String token;

    private String peekToken() {
        if (token == null)
            try {
                while (st == null || !st.hasMoreTokens()) {
                    line = r.readLine();
                    if (line == null) return null;
                    st = new StringTokenizer(line);
                }
                token = st.nextToken();
            } catch (IOException e) { }
        return token;
    }

    private String nextToken() {
        String ans = peekToken();
        token = null;
        return ans;
    }

    public static void main(String[] args) {
        // real
        Main sc = null;
        try{
            
            sc = new Main(System.in, System.out);

        }catch (Exception e){
            System.out.println(e);
        }
        int[] dom = {11, 4, 3, 20, 10, 14, 0, 0};
        int[] notDom = {11, 4, 3, 2, 10, 0, 0, 0};
        String cards = "AKQJT987";
        int n = sc.getInt();
        int sum = 0;
        char suit = sc.getWord().charAt(0);
        while(sc.hasMoreTokens()){
            String next = sc.getWord();
            if(next.charAt(1) == suit){
                sum += dom[cards.indexOf(next.charAt(0))];
            }else{
                sum += notDom[cards.indexOf(next.charAt(0))];
            }

        }
        sc.println(sum);
        sc.flush();


    }
}