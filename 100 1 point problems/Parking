import java.io.*;
import java.util.StringTokenizer;
import java.util.*;
import java.lang.*;
import java.util.stream.IntStream;

class Main extends PrintWriter {
    public Main(InputStream i) {
        super(new BufferedOutputStream(System.out));
        r = new BufferedReader(new InputStreamReader(i));
    }
    public Main(InputStream i, OutputStream o) {
        super(new BufferedOutputStream(o));
        r = new BufferedReader(new InputStreamReader(i));
    }

    public boolean hasMoreTokens() {
        return peekToken() != null;
    }

    public int getInt() {
        return Integer.parseInt(nextToken());
    }

    public double getDouble() {
        return Double.parseDouble(nextToken());
    }

    public long getLong() {
        return Long.parseLong(nextToken());
    }

    public String getWord() {
        return nextToken();
    }



    private BufferedReader r;
    private String line;
    private StringTokenizer st;
    private String token;

    private String peekToken() {
        if (token == null)
            try {
                while (st == null || !st.hasMoreTokens()) {
                    line = r.readLine();
                    if (line == null) return null;
                    st = new StringTokenizer(line);
                }
                token = st.nextToken();
            } catch (IOException e) { }
        return token;
    }

    private String nextToken() {
        String ans = peekToken();
        token = null;
        return ans;
    }


    public static void main(String[] args) {

        Main sc = null;
        try{
            //sc = new Main(new FileInputStream(new File("./src/" + "in")), System.out);
            sc = new Main(System.in, System.out);
        }catch (Exception e){
            System.out.println(e);
        }

        int cases = sc.getInt();
        for (int i = 0; i < cases; i++) {
            int low = 0, high = 0;
            int spots = sc.getInt();
            low = high = sc.getInt();
            for (int j = 1; j < spots; j++) {
                int next = sc.getInt();
                low = next < low ? next : low;
                high = next > high ? next : high;

            }
            sc.println(2 * (high - low));
        }

        sc.flush();
    }
}